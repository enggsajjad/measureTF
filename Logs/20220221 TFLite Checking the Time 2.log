#include "Arduino.h"
#include "controls.h"
#include "modelExecuter.h"
#include "tflmTimer.h"
//#include "model_gen.h"
#include "sine_model_data.h"
#include "printer.h"


Printer *printer;

ModelExecuter *exec = new ModelExecuter(&Serial);
void setup()
{
  Serial.begin(115200);
  pinMode(exec->led, OUTPUT);
  delay(1000);
  digitalWrite(exec->led, HIGH);
  delay(1000);
  digitalWrite(exec->led, LOW);
  printer = new Printer(&Serial);

  while (!Serial)
  {
  }
    // Test code
  Serial.println("dummy_line_prevent_strange_characters");
  //TflmTimer::startTimingService(&Serial);
  
  exec->initTFLM();
  //exec->setModel(model_gen, model_gen_len);
  exec->setModel(g_sine_model_data, g_sine_model_data_len);
  //TflmTimer::measureTime(1);
  //exec->execute();
  //TflmTimer::measureTime(1);

  // print the time*/
  //TflmTimer::printMeasurements(printer);
  // This needs to stay to indicate the end of the transmission

  TflmTimer::startTimingService(&Serial);
  delay(500);
  TflmTimer::measureTime(1);
  delay(500);
  TflmTimer::measureTime(1);
  delay(500);
  TflmTimer::measureTime(2);
  TflmTimer::startTimingService(&Serial);
  delay(500);
  TflmTimer::measureTime(3);
  delay(500);
  TflmTimer::printMeasurements(printer);
  Serial.println("---Complete---");

  uint32_t start;
uint32_t stop;
uint32_t elapsed;

// enable DWT
CoreDebug->DEMCR |= 0x01000000;

// Reset cycle counter
DWT->CYCCNT = 0;

// enable cycle counter
DWT->CTRL |= 0x1;

start = DWT->CYCCNT;
delay(1000);
stop = DWT->CYCCNT;
elapsed = stop-start;
Serial.print("cycles for delay(1000) ");
Serial.println(elapsed);
// <info> app: cycles for nrf_delay_ms(1000) = 64018002
//address of the register
volatile unsigned int *DWT_CYCCNT   = (volatile unsigned int *)0xE0001004;     

//address of the register
volatile unsigned int *DWT_CONTROL  = (volatile unsigned int *)0xE0001000;     

//address of the register
volatile unsigned int *DWT_LAR      = (volatile unsigned int *)0xE0001FB0;     

//address of the register
volatile unsigned int *SCB_DEMCR    = (volatile unsigned int *)0xE000EDFC;


*DWT_LAR = 0xC5ACCE55; // unlock (CM7)
*SCB_DEMCR |= 0x01000000;
*DWT_CYCCNT = 0; // reset the counter
*DWT_CONTROL |= 1 ; // enable the counter

uint32_t x = *DWT_CYCCNT;
delay(1000);
uint32_t y = *DWT_CYCCNT;
x = (y - x); // Elapsed clock ticks, at SystemCoreClock
Serial.print("cycles for delay(1000) ");
Serial.println(x);
}






dummy_line_prevent_strange_characters
const char* identifier
MEMORY (HEAP_CURRENT_SIZE,4016)
const char* identifier
MEMORY (HEAP_RESERVED_SIZE,208992)
Status Got Model
measureMent
TIMING (3,1448414),(58,6065407480692706327),(103,4941685130756094697),(3,1445624)
---Complete---
cycles for delay(1000) 2892716
cycles for delay(1000) 2893754
dummy_line_prevent_strange_characters
const char* identifier
MEMORY (HEAP_CURRENT_SIZE,4016)
const char* identifier
MEMORY (HEAP_RESERVED_SIZE,208992)
Status Got Model
measureMent
TIMING (3,1448414),(58,6065407480692706327),(103,4941685130756094697),(3,1445624)
---Complete---
cycles for delay(1000) 2892716
cycles for delay(1000) 2893754
